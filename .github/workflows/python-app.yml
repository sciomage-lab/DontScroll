# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches:
      - main
      - 'feat/**'
      - 'FEAT/**'
  pull_request:
    branches: [ "main" ]
  repository_dispatch:
    types: [custom_event]

permissions:
  contents: read

jobs:
  build:

    # Target OS and Python version
    strategy:
      matrix:
        # self-hosted is Ubuntu 20.04.6 LTS
        os: [ self-hosted, windows-latest ]
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]

    # Target OS
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    # Target Python version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Cache
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ${{ env.HOME }}/.cache/pip
        key: ${{ runner.os }}-deps-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-deps-
        if: |
          needs.build.result == 'success' || needs.build.result == 'failure' || needs.build.result == 'cancelled' || needs.build.outputs.cache-hit != 'true'

    # PYTHONPATH for Linux
    - name: Set up PYTHONPATH
      run: |
        echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      if: matrix.os == 'ubuntu-latest'

    # PYTHONPATH for Windows
    - name: Set up PYTHONPATH
      run: |
        echo "PYTHONPATH=$env:GITHUB_WORKSPACE" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'

    # Install dependencies for Linux
    - name: Install dependencies (Linux)
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      if: matrix.os == 'ubuntu-latest'

    # Install dependencies for Windows
    - name: Install dependencies (Windows)
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
        if (Test-Path requirements-dev.txt) { pip install -r requirements-dev.txt }
      if: matrix.os == 'windows-latest'

    - name: Test with pytest
      run: |
        pytest
