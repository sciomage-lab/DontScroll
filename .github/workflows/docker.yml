name: Docker build and test

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  docker-build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: ['3.8', '3.9', '3.10']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python (Github Host)
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'

    - name: Set up Python (Self Host)
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
      if: matrix.os == 'self-hosted'

    # PYTHONPATH for Linux
    - name: Set up PYTHONPATH (Linux)
      run: |
        echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      if: matrix.os == 'ubuntu-latest' ||  matrix.os == 'self-hosted'

    # PYTHONPATH for Windows
    - name: Set up PYTHONPATH (Windows)
      run: |
        echo "PYTHONPATH=$env:GITHUB_WORKSPACE" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'

    - name: Stop PostgreSQL Docker containers
      run: |
        ./docker/postgres/stop.sh

    - name: Build & Start PostgreSQL Docker containers
      run: |
        ./docker/postgres/start.sh

    - name: Stop DontScroll Docker containers
      run: |
        ./docker/DontScroll/stop.sh

    - name: Build & Start DontScroll Docker containers
      run: |
        ./docker/DontScroll/start.sh

    - name: Wait for 10 seconds
      run: sleep 10

    # Install dependencies for Linux
    - name: Install dependencies (Linux)
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'self-hosted'

    # Install dependencies for Windows
    - name: Install dependencies (Windows)
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
        if (Test-Path requirements-dev.txt) { pip install -r requirements-dev.txt }
      if: matrix.os == 'windows-latest'

    - name: Run pytest
      run: |
        pytest -k "skip_docker"

